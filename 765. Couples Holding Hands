class Solution {
    public int minSwapsCouples(int[] row) {
        int n = row.length;
        //map each person to there position
        HashMap<Integer,Integer> positionMap = new HashMap<>();
        for(int i = 0; i < n;i++)
        {
            positionMap.put(row[i],i);
        }
        int swaps =0;
         // Step 2: Iterate through each couple
        for(int i =0; i<n; i += 2)
        {
            int first = row[i];
            int second = first ^ 1; // Calculate the partner (XOR with 1)
            // Check if the couple is already sitting together
            if(row[i + 1] != second )
            {
                swaps++;
                // Step 3: Swap to fix the couple
                int currPosition = positionMap.get(second);
                //Update the curr position
                positionMap.put(row[i+1],currPosition);
                positionMap.put(second,i+1);

                //perform the swaps
                row[currPosition] = row[i+1];
                row[i+1] = second;

            }
        }
        return swaps;
    }
}
