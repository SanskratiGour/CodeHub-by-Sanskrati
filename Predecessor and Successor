
/* BST Node
class Node
{
	int key;
	Node left, right;
	
	Node(int item)
	{
	    data = item;
	    left = right = null;
	}
}
*/

// This function finds predecessor and successor of key in BST.
// It sets pre and suc as predecessor and successor respectively
class GfG
{
    public static void findPreSuc(Node root, Res p, Res s, int key)
    {
       // add your code here
       if(root == null)
       {
           return;
       }
       if(root.data > key)
       {
           s.succ = root;
           findPreSuc(root.left, p , s , key);
       }
       else if (root.data < key)
       {
           p.pre = root;
           findPreSuc(root.right , p ,s , key);
       }
       else {
            findPreSuc(root.left, p , s , key);
            findPreSuc(root.right , p ,s , key);
           
       }
       
       
    }
}
