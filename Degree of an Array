class Solution {
    public int findShortestSubArray(int[] nums) {
        HashMap<Integer,Integer> count = new HashMap<>();
        int degree =0;
        
        HashMap<Integer,Integer> firstElement = new HashMap<>();
        int min_length =0;
        
        for(int i=0;i<nums.length;i++)
        {
           firstElement.putIfAbsent(nums[i],i);
            count.put(nums[i],count.getOrDefault(nums[i],0)+1) ;
            
            if(count.get(nums[i]) > degree)
                {
                    degree = count.get(nums[i]);
                    min_length = i - firstElement.get(nums[i])+1;
                }
            else if(count.get(nums[i]) == degree)
            {
                min_length = Math.min(min_length ,i - firstElement.get(nums[i])+1 );
            }
        
        }
        return min_length;
    }
}
